{"version":3,"sources":["helpers/FilterContacts.js","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","components/PhoneBookListItem/PhoneBookListItem.styles.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.styles.jsx","components/PhoneBookList/PhoneBooklist.jsx","components/PhoneBookForm/PhoneBookForm.styles.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["FilterContacts","contacts","filter","obj","name","toLowerCase","includes","trim","Wrapper","styled","section","Title","h2","Section","title","children","Main","div","ContainerContacts","ContainerAdd","Container","Item","li","Button","button","propTypes","onClick","PropTypes","func","isRequired","PhoneBookListItem","number","id","onDeleteContact","size","List","ul","PhoneBookList","map","Form","form","Label","label","Input","input","ContainerForm","PhoneBookForm","state","nameInputId","shortid","telInputId","contactId","handleSetUserInfo","e","currentTarget","value","setState","resetForm","handleSubmit","preventDefault","props","onSubmit","this","action","onChange","type","pattern","placeholder","autoComplete","maxLength","required","htmlFor","Component","string","FilterContainer","Filter","filterInputId","handleChangeFilter","target","App","handleFormSubmit","checkContact","handleAddContact","includedName","find","contact","includedNumber","replace","Swal","fire","position","toUpperCase","confirmButtonColor","prevState","handleDeleteContact","el","handleFilterInputChange","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filterValue","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c34c361c.chunk.js","sourcesContent":["function FilterContacts(contacts, filter) {\n  return contacts.filter(obj => {\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\n  });\n}\n\nexport default FilterContacts;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.section`\n  padding: 40px 0;\n`;\nexport const Title = styled.h2`\n  margin: 0 auto 50px;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  text-align: center;\n  color: #727273;\n`;","import PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styles';\nimport { RiBook2Line } from 'react-icons/ri';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && (\n        <Title>\n          <RiBook2Line />\n          {title}\n        </Title>\n      )}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Main = styled.div`\n  width: 900px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 30px;\n  border-radius: 20px;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  background-color: #f0f0f3;\n  & h1,\n  h2 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #727273;\n    font-size: 28px;\n    margin-bottom: 50px;\n    margin-top: 0;\n    & svg {\n      margin-right: 15px;\n      color: #727273;\n    }\n  }\n`;\n\nexport const ContainerContacts = styled.div`\n  width: 450px;\n`;\nexport const ContainerAdd = styled.div`\n  width: 450px;\n`;\n","import PropTypes from 'prop-types';\nimport { Main } from './Container.styles';\n\nexport const Container = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 440px;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px 5px;\n  & span {\n    display: inline-flex;\n    align-items: center;\n    font-weight: 600;\n    color: var(--grey);\n    &:first-of-type {\n      color: var(--dark);\n      margin-right: 10px;\n    }\n    & svg {\n      margin-right: 15px;\n      color: var(--dark);\n    }\n  }\n  & svg {\n    color: var(--dark);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: 10px;\n  font-size: 16px;\n  padding: 5px;\n  color: var(--dark);\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms ease;\n  &:hover {\n    border: 1px solid var(--dark);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './PhoneBookListItem.styles';\nimport { RiUserHeartFill } from 'react-icons/ri';\n\nconst PhoneBookListItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <Item>\n      <span>\n        <RiUserHeartFill size=\"20\" />\n        {name}:\n      </span>\n      <span>{number}</span>\n      <Button onClick={onDeleteContact} id={id}>\n        delete\n      </Button>\n    </Item>\n  );\n};\n\nPhoneBookListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookListItem;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n","import PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItem';\nimport PropTypes from 'prop-types';\nimport { List } from './PhoneBookList.styles';\n\nconst PhoneBookList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <PhoneBookListItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nPhoneBookList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts:PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n\nexport default PhoneBookList;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin: 0 auto 50px;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  left: 0;\n  bottom: 5px;\n  margin-bottom: 10px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease, transform 250ms ease;\n\n  & svg {\n    margin-right: 10px;\n    font-weight: 500;\n    transition: color 250ms ease, transform 250ms ease;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  padding-left: 30px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    font-weight: 700;\n    transition: opacity 250ms ease;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      font-weight: 700;\n      transition-delay: 250ms;\n    }\n  }\n\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    color: var(--dark);\n    & svg {\n      font-weight: 700;\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 1px solid #f0f0f3;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  border-radius: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n  & svg {\n    margin-right: 10px;\n  }\n`;\nexport const ContainerForm = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 50px;\n`;","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport { Form, Label, Input, Button, ContainerForm } from './PhoneBookForm.styles';\nimport { RiUserLine, RiPhoneLine, RiUserAddLine } from 'react-icons/ri';\n\n\nexport class PhoneBookForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid();\n  telInputId = shortid();\n  contactId = shortid();\n\n  handleSetUserInfo = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit} action=\"\">\n        <ContainerForm>\n          <Input\n            onChange={this.handleSetUserInfo}\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Name\"\n            autoComplete=\"off\"\n            maxLength=\"40\"\n            required\n          />\n          <Label htmlFor={this.nameInputId}>\n            <RiUserLine size=\"25\" />\n            Name\n          </Label>\n        </ContainerForm>\n        <ContainerForm>\n          <Input\n            onChange={this.handleSetUserInfo}\n            id={this.telInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"111-11-11\"\n            autoComplete=\"off\"\n            maxLength=\"15\"\n            required\n          />\n          <Label htmlFor={this.telInputId}>\n            <RiPhoneLine size=\"25\" />\n            Number\n          </Label>\n        </ContainerForm>\n        <Button type=\"submit\">\n          <RiUserAddLine />\n          Add contact\n        </Button>\n      </Form>\n    );\n  }\n}\n\nPhoneBookForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 30px;\n  padding-left: 40px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    transition: opacity 250ms ease;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--dark);\n    & svg {\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const FilterContainer = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 25px;\n`;","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Component } from 'react';\nimport { RiFilter2Line } from 'react-icons/ri';\nimport { FilterContainer, Label, Input } from './Filter.styles';\n\nexport class Filter extends Component {\n  state = {\n    value: '',\n  };\n\n  filterInputId = shortid();\n\n  handleChangeFilter = e => {\n    const { value } = e.target;\n\n    this.setState({ value });\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <>\n        <FilterContainer>\n          <Input\n            id={this.filterInputId}\n            name=\"filter\"\n            onChange={this.handleChangeFilter}\n            type=\"text\"\n            value={value}\n            placeholder=\"Name\"\n          />\n          <Label htmlFor={this.filterInputId}>\n            <RiFilter2Line size=\"30\" />\n            Find contact by name\n          </Label>\n        </FilterContainer>\n      </>\n    );\n  }\n}\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import './App.css';\nimport { Component } from 'react';\nimport Swal from 'sweetalert2';\nimport shortid from 'shortid';\nimport FilterContacts from './helpers/FilterContacts';\nimport { Section } from './components/Section/Section';\nimport { Container } from './components/Container/Container';\nimport PhoneBookList from './components/PhoneBookList/PhoneBooklist';\nimport { PhoneBookForm } from './components/PhoneBookForm/PhoneBookForm';\nimport { Filter } from './components/Filter/Filter';\nimport { ContainerContacts, ContainerAdd } from './components/Container/Container.styles';\nimport { RiContactsFill, RiUserAddFill } from 'react-icons/ri';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleFormSubmit = ({ name, number }) => {\n    const includedContact = this.checkContact(name, number);\n\n    if (includedContact) {\n      return;\n    }\n\n    this.handleAddContact(name, number);\n  };\n\n  checkContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const includedName = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const includedNumber = contacts.find(\n      (contact) =>\n        contact.number.replace(/[^0-9]/g, \"\") === number.replace(/[^0-9]/g, \"\")\n    );\n\n    if (includedName) {\n      return Swal.fire({\n        position: \"center\",\n        title: `Sorry,${name.toUpperCase()}\\n is already in contacts!`,\n        confirmButtonColor: \"grey\",\n      });\n    }\n\n    if (includedNumber) {\n      return Swal.fire({\n        position: \"center\",\n        title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\n        confirmButtonColor: \"grey\",\n      });\n    }\n  };\n\n  handleAddContact = (name, number) => {\n    const id = shortid();\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n\n\n  handleDeleteContact = e => {\n    this.setState({\n      contacts: this.state.contacts.filter(el => el.id !== e.target.id),\n    });\n  };\n\n  handleFilterInputChange = value => {\n    this.setState({ filter: value.toLowerCase() });\n  };\n\n  render() {\n    const contacts = FilterContacts(this.state.contacts, this.state.filter);\n    return (\n      <>\n        <Section title=\"Phone Book\">\n          <Container>\n            <ContainerAdd>\n              <h1>\n                <RiUserAddFill /> Add Contact\n              </h1>\n              <PhoneBookForm\n                onSubmit={this.handleFormSubmit}\n              />\n            </ContainerAdd>\n\n            <ContainerContacts>\n              <h2>\n                <RiContactsFill />\n                Contacts\n              </h2>\n              <Filter filterValue={this.state.filter} onChange={this.handleFilterInputChange} />\n              {contacts.length > 0 && (\n                <PhoneBookList onDeleteContact={this.handleDeleteContact} contacts={contacts} />\n              )}\n            </ContainerContacts>\n          </Container>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}